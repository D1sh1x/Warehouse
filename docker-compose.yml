services:
  db:
    image: postgres:16-alpine
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: warehouse
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d warehouse"]
      interval: 5s
      timeout: 3s
      retries: 20
    volumes:
      - db_data:/var/lib/postgresql/data

  migrator:
    image: postgres:16-alpine
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ./migrations:/migrations:ro
    environment:
      PGPASSWORD: postgres
    command: >
      sh -c "
        psql -h db -U postgres -d warehouse -f /migrations/001_init.sql &&
        psql -h db -U postgres -d warehouse -f /migrations/002_triggers.sql
      "

  app:
    build:
      context: .
      dockerfile: Dockerfile
    depends_on:
      db:
        condition: service_healthy
      migrator:
        condition: service_completed_successfully
    environment:
      # config.yml is used by the app;
      # leaving these here in case you switch to env-based config later
      TZ: Europe/Stockholm
    ports:
      - "8080:8080"
    volumes:
      - ./static:/app/static:ro
      - ./config:/app/config:ro
      - ./migrations:/app/migrations:ro

volumes:
  db_data:
